[Tests]
  [flux]
    type = CSVDiff
    input = flux.i
    csvdiff = flux_out.csv
    requirement = "The system shall correctly normalize flux tallies for eigenvalue simulations."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [flip_order]
    type = CSVDiff
    input = flux.i
    cli_args = 'Tallies/Cell/tally_score="flux heating"'
    csvdiff = flux_out.csv
    requirement = "The system shall correctly normalize flux tallies for eigenvalue simulations when listed in an arbitrary order."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [flip_order_and_name]
    type = CSVDiff
    input = flux.i
    cli_args = 'Tallies/Cell/tally_score="flux heating" Tallies/Cell/tally_name="flux0 heating0" Postprocessors/flux_pebble1/variable=flux0 Postprocessors/flux_pebble2/variable=flux0 Postprocessors/flux_pebble3/variable=flux0 Postprocessors/flux_fluid/variable=flux0 Problem/source_rate_normalization="heating"'
    csvdiff = flux_out.csv
    requirement = "The system shall correctly normalize flux tallies for eigenvalue simulations when listed in an arbitrary order and with user-defined names."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [not_already_added]
    type = CSVDiff
    input = flux.i
    cli_args = 'Tallies/Cell/tally_score="flux" Problem/source_rate_normalization=heating'
    csvdiff = flux_out.csv
    requirement = "The system shall correctly normalize flux tallies for eigenvalue simulations when the source rate normalization tally is not already added."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [missing_name]
    type = RunException
    input = flux.i
    cli_args = 'Tallies/Cell/tally_score="flux" Tallies/Cell/tally_name="f"'
    expect_err = "When specifying 'tally_name', the score indicated in 'source_rate_normalization' must be\n"
                 "listed in 'tally_score' so that we know what you want to name that score \(heating\)"
    requirement = "The system shall error if the user tries to name only a partial set of the total tally scores."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [missing_norm]
    type = RunException
    input = missing_norm.i
    expect_err = "When using a non-heating tally \(flux, H3_production\) in eigenvalue mode"
    requirement = "The system shall error if the user omits the required normalization tally for non-heating scores in eigenvalue mode"
    required_objects = 'OpenMCCellAverageProblem'
  []
[]
